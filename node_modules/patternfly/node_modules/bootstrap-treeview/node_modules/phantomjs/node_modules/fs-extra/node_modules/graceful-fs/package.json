{
  "_args": [
    [
      "graceful-fs@https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.3.tgz",
      "/home/ryanj/src/sketchpod/node_modules/patternfly/node_modules/bootstrap-treeview/node_modules/phantomjs/node_modules/fs-extra"
    ]
  ],
  "_from": "graceful-fs@>=4.1.2 <5.0.0",
  "_id": "graceful-fs@4.1.3",
  "_inCache": true,
  "_location": "/patternfly/bootstrap-treeview/phantomjs/fs-extra/graceful-fs",
  "_phantomChildren": {},
  "_requested": {
    "name": "graceful-fs",
    "raw": "graceful-fs@https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.3.tgz",
    "rawSpec": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/patternfly/bootstrap-treeview/phantomjs/fs-extra"
  ],
  "_resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.3.tgz",
  "_shasum": "92033ce11113c41e2628d61fdfa40bc10dc0155c",
  "_shrinkwrap": null,
  "_spec": "graceful-fs@https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.3.tgz",
  "_where": "/home/ryanj/src/sketchpod/node_modules/patternfly/node_modules/bootstrap-treeview/node_modules/phantomjs/node_modules/fs-extra",
  "bugs": {
    "url": "https://github.com/isaacs/node-graceful-fs/issues"
  },
  "dependencies": {},
  "description": "A drop-in replacement for fs, making various improvements.",
  "devDependencies": {
    "mkdirp": "^0.5.0",
    "rimraf": "^2.2.8",
    "tap": "^5.4.2"
  },
  "directories": {
    "test": "test"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "files": [
    "fs.js",
    "graceful-fs.js",
    "legacy-streams.js",
    "polyfills.js"
  ],
  "homepage": "https://github.com/isaacs/node-graceful-fs#readme",
  "keywords": [
    "fs",
    "module",
    "reading",
    "retry",
    "retries",
    "queue",
    "error",
    "errors",
    "handling",
    "EMFILE",
    "EAGAIN",
    "EINVAL",
    "EPERM",
    "EACCESS"
  ],
  "license": "ISC",
  "main": "graceful-fs.js",
  "name": "graceful-fs",
  "optionalDependencies": {},
  "readme": "# graceful-fs\n\ngraceful-fs functions as a drop-in replacement for the fs module,\nmaking various improvements.\n\nThe improvements are meant to normalize behavior across different\nplatforms and environments, and to make filesystem access more\nresilient to errors.\n\n## Improvements over [fs module](http://api.nodejs.org/fs.html)\n\ngraceful-fs:\n\n* Queues up `open` and `readdir` calls, and retries them once\n  something closes if there is an EMFILE error from too many file\n  descriptors.\n* fixes `lchmod` for Node versions prior to 0.6.2.\n* implements `fs.lutimes` if possible. Otherwise it becomes a noop.\n* ignores `EINVAL` and `EPERM` errors in `chown`, `fchown` or\n  `lchown` if the user isn't root.\n* makes `lchmod` and `lchown` become noops, if not available.\n* retries reading a file if `read` results in EAGAIN error.\n\nOn Windows, it retries renaming a file for up to one second if `EACCESS`\nor `EPERM` error occurs, likely because antivirus software has locked\nthe directory.\n\n## USAGE\n\n```javascript\n// use just like fs\nvar fs = require('graceful-fs')\n\n// now go and do stuff with it...\nfs.readFileSync('some-file-or-whatever')\n```\n\n## Global Patching\n\nIf you want to patch the global fs module (or any other fs-like\nmodule) you can do this:\n\n```javascript\n// Make sure to read the caveat below.\nvar realFs = require('fs')\nvar gracefulFs = require('graceful-fs')\ngracefulFs.gracefulify(realFs)\n```\n\nThis should only ever be done at the top-level application layer, in\norder to delay on EMFILE errors from any fs-using dependencies.  You\nshould **not** do this in a library, because it can cause unexpected\ndelays in other parts of the program.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/isaacs/node-graceful-fs.git"
  },
  "scripts": {
    "test": "node test.js | tap -"
  },
  "version": "4.1.3"
}
